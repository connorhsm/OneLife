#######################
# Usage
#######################

# Written in the context of an ephemeral miniOneLifeCompile environment
# (Usually in automation with a fresh environment each time)

# TODO 
# - support minorGems

##### Version check

cd OneLife
lastTaggedVersion=`git for-each-ref --sort=-creatordate --format '%(refname:short)' --count=1 refs/tags/2HOL_v* | sed -e 's/2HOL_v//'`
cd ..

newVersion=$(lastTaggedVersion + 1)


##### Bump dataVersionNumber

cd OneLifeData7
echo -n "$newVersion" > dataVersionNumber.txt
git add dataVersionNumber.txt
git commit -m "Updatated dataVersionNumber to $newVersion"
cd ..


##### Tag new release (Change to Git Bash)

newTag=2HOL_v$newVersion

cd OneLifeData7
git tag -a $newTag -m "Tag automatically generated by update script."
git push
git push origin $newTag
cd ..

cd OneLife
git tag -a $newTag -m "Tag automatically generated by update script."
git push
git push origin $newTag
cd ..

cd OneLife
git tag -fa 2HOL_liveServer -m "Tag automatically generated by update script."
git push
git push origin -f --tags
cd ..


##### Make the game folders

# TODO debug
./miniOneLifeCompile/repo/freeLockedRepo.sh

# TODO
newVersion=20311
lastTaggedVersion=20310

# TODO
lastTaggedCodeVersion=$lastTaggedVersion
lastTaggedDataVersion=$lastTaggedVersion


# Build last version

git -C OneLife checkout 2HOL_v$lastTaggedCodeVersion
git -C OneLifeData7 checkout 2HOL_v$lastTaggedDataVersion
cd miniOneLifeCompile
./repo/makeFullGameFolderForRelease.sh 1
./repo/makeFullGameFolderForRelease.sh 5
cd ..


# Build new version

git -C OneLife checkout 2HOL_v$newVersion
git -C OneLifeData7 checkout 2HOL_v$newVersion
cd miniOneLifeCompile
./repo/makeFullGameFolderForRelease.sh 1
./repo/makeFullGameFolderForRelease.sh 5
cd ..


##### copy cache files to old version

# TODO loop loop

cp cache.fcz 2HOL_v${lastTaggedCodeVersion}_linux/animations
cp cache.fcz 2HOL_v${lastTaggedCodeVersion}_linux/categories
cp cache.fcz 2HOL_v${lastTaggedCodeVersion}_linux/objects
cp cache.fcz 2HOL_v${lastTaggedCodeVersion}_linux/sprites
cp cache.fcz 2HOL_v${lastTaggedCodeVersion}_linux/transitions

cp cache.fcz 2HOL_v${lastTaggedCodeVersion}_win/animations
cp cache.fcz 2HOL_v${lastTaggedCodeVersion}_win/categories
cp cache.fcz 2HOL_v${lastTaggedCodeVersion}_win/objects
cp cache.fcz 2HOL_v${lastTaggedCodeVersion}_win/sprites
cp cache.fcz 2HOL_v${lastTaggedCodeVersion}_win/transitions

# TODO ??
##### check that settings is the same between versions

##### Generate the patches with diffBundle

cd minorGems/game/diffBundle
./diffBundleCompile
cd ../../..

./minorGems/game/diffBundle/diffBundle \
  2HOL_v${lastTaggedVersion}_linux \
  2HOL_v${newVersion}_linux \
  ${newVersion}_inc_linux.dbz

./minorGems/game/diffBundle/diffBundle \
  2HOL_v${lastTaggedVersion}_win \
  2HOL_v${newVersion}_win \
  ${newVersion}_inc_win.dbz

echo -n "http://play.twohoursonelife.com/downloads/patches/${newVersion}_inc_linux.dbz" > ${newVersion}_inc_linux_urls.txt
echo -n "http://play.twohoursonelife.com/downloads/patches/${newVersion}_inc_win.dbz" > ${newVersion}_inc_win_urls.txt

echo -n ${newVersion} > latest.txt
echo -n "<?php \$version=${newVersion}; ?>" > requiredVersion.php


##### Zip game releases

zip -r 2HOL_linux_v${newVersion}.zip 2HOL_v${newVersion}_linux
zip -r 2HOL_win_v${newVersion}.zip 2HOL_v${newVersion}_win


# TODO Split up into new script from here


##### Upload zips

scp 2HOL_linux_v${newVersion}.zip ubuntu@play.twohoursonelife.com:/var/www/web.twohoursonelife.com/OneLifeWeb/data/diffDownloads
scp 2HOL_win_v${newVersion}.zip ubuntu@play.twohoursonelife.com:/var/www/web.twohoursonelife.com/OneLifeWeb/data/diffDownloads



##### Upload patches

scp ${newVersion}_inc_linux.dbz ubuntu@play.twohoursonelife.com:/var/www/web.twohoursonelife.com/OneLifeWeb/data/diffDownloads/patches
scp ${newVersion}_inc_win.dbz ubuntu@play.twohoursonelife.com:/var/www/web.twohoursonelife.com/OneLifeWeb/data/diffDownloads/patches
scp ${newVersion}_inc_linux_urls.txt ubuntu@play.twohoursonelife.com:/var/www/web.twohoursonelife.com/OneLifeWeb/data/diffDownloads/patches
scp ${newVersion}_inc_win_urls.txt ubuntu@play.twohoursonelife.com:/var/www/web.twohoursonelife.com/OneLifeWeb/data/diffDownloads/patches

scp latest.txt ubuntu@play.twohoursonelife.com:/var/www/web.twohoursonelife.com/OneLifeWeb/data/diffDownloads/patches
scp requiredVersion.php ubuntu@play.twohoursonelife.com:/var/www/web.twohoursonelife.com/OneLifeWeb/data/diffDownloads/patches


# TODO
# write new version number if server is not recompiled
echo -n 20303 > dataVersionNumber.txt




# announcement

# TODO sleep
echo -n 'Server update in 5 minutes! Check our discord for more information.' > settings/customGlobalMessage.ini
echo -n 'Server update in 1 minute! Check our discord for more information.' > settings/customGlobalMessage.ini
echo -n 1 > settings/customGlobalMessageOn.ini

echo -n 1 > settings/forceShutdownMode.ini

echo -n 0 > settings/forceShutdownMode.ini