name: Build diff bundles

on:
  workflow_call:
  workflow_dispatch:

jobs:
  package-signed-windows-release:
    runs-on: ubuntu-latest
    steps:

      # LIMITATION: Downloads from the latest release, if a new release occurs between
      # the time the caller workflow is called and reaching this step, the job will fail.
      - name: Fetch latest client packages
        uses: dsaltares/fetch-gh-release-asset@1.0.0
        with:
          repo: connorhsm/OneLife # TO CHANGE
          file: 2HOL_v.*_(Linux\.zip|Windows_Signed\.zip)
          regex: true
          target: ./latest/

      - name: Fetch previous release tag # We may need to filter later on for the live server tags and if we use tags for beta builds
        id: fetch-previous-tag
        run: |
          TAG=git tag --sort=-creatordate | grep -A 1 ${{ github.event.release.tag_name }} | tail -n 1
          echo "::set-output name=PREVIOUS_TAG::$TAG"

      - name: Fetch previous client packages
        uses: dsaltares/fetch-gh-release-asset@1.0.0
        with:
          repo: connorhsm/OneLife # TO CHANGE
          version: tags/${{ steps.fetch-previous-tag.outputs.PREVIOUS_TAG }}
          file: 2HOL_v.*_(Linux\.zip|Windows_Signed\.zip)
          regex: true
          target: ./previous/

      - name: Ensure assets downloaded
        run: |
          test -f 2HOL_v*_Linux.zip || exit 2
          test -f 2HOL_v*_Windows_Signed.zip || exit 2
        # If downloaded or not should be output. If true, generate diff bundles. If false, build previous release and then generate diff bundles.



      - Fetch the last releases from the previous release, if available

      - If not available, build the previous release

      - Generate diff bundles

      - Upload diff bundles to latest release

      - Possibly upload diff bundles to server for client download