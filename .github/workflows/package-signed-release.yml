# Purpose
# Once main release workflow is complete, we manually download the Windows package
# and sign the exe which is uploaded individually back to the draft release as '2HOL_Signed.exe'
# This workflow takes the original Windows package and replaces the exe with the signed exe, re-packages and finally uploads back to the release.

name: Package signed Windows release

on:
  workflow_dispatch:

jobs:
  package-signed-windows:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch signed binary
        id: fetch-binary
        uses: dsaltares/fetch-gh-release-asset@1.0.0
        with:
          repo: connorhsm/OneLife
          file: 2HOL_.*(Unsigned\.zip|\.exe)
          regex: true
          target: ./

      - name: Insert signed binary to package
        id: insert-signed
        run: |
          ZIP_NAME=$(echo 2HOL_v*_Windows_Unsigned.zip)
          SHORT_NAME=2HOL_$(echo 2HOL_v*_Windows_Unsigned.zip | cut -d "_" -f 2)
          SIGNED_NAME=$(echo $SHORT_NAME)_Windows_Signed.zip
          unzip $ZIP_NAME
          mv 2HOL_Signed.exe $SHORT_NAME/2HOL.exe
          zip -r $SIGNED_NAME $SHORT_NAME
          echo "::set-output name=PACKAGE::$SIGNED_NAME"

      - name: Update release
        id: update_release
        uses: tubone24/update_release@v1.3.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
          TAG_NAME: ${{ steps.fetch-binary.outputs.version }}

      - name: Upload signed package
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.update_release.outputs.upload_url }}
          asset_path: ./
          asset_name: ${{ steps.insert-signed.outputs.PACKAGE }}
          asset_content_type: application/zip
